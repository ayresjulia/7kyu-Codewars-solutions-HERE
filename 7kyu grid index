/*You are given an n by n grid of characters for example:
[['m', 'y', 'e'], 
 ['x', 'a', 'm'], 
 ['p', 'l', 'e']]

You are also given a list of integers as input for example:
[1, 3, 5, 8]

You have to find the characters in these indexes of the grid
if you think of the indexes as:
[[1, 2, 3], 
 [4, 5, 6], 
 [7, 8, 9]]

Remember that the indexes start from one and not zero.

Then you output a string like this:
'meal'
All inputs will be valid.*/

function gridIndex(grid, indices) {
    let oneArray = grid.flat(); // get rid of nested arrays
  //iterate through indices to get the letter and join letter strings into one
    return indices.map(indice => oneArray[indice -1]).join('');
  } 

console.log(gridIndex([['m', 'y', 'e'], ['x', 'a', 'm'], ['p', 'l', 'e']], [1, 2, 3, 4, 5, 6, 7, 8, 9])); //myexample
console.log(gridIndex([['m', 'y', 'e'], ['x', 'a', 'm'], ['p', 'l', 'e']], [1, 5, 6])); // mam
console.log(gridIndex([['m', 'y', 'e'], ['x', 'a', 'm'], ['p', 'l', 'e']], [1, 3, 7, 8])); //mepl
console.log(gridIndex([['h', 'e', 'l', 'l'], ['o', 'c', 'o', 'd'], ['e', 'w', 'a', 'r'], ['r', 'i', 'o', 'r']], [5, 7, 9, 3, 6, 6, 8, 8, 16, 13]));
    // 'ooelccddrr'
